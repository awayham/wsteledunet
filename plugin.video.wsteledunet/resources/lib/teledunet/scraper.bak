import cookielib
import re
import urllib2,urllib
from BeautifulSoup import BeautifulSoup
from models import ChannelItem
from hardcode import HARDCODED_STREAMS
import xbmcaddon
import time
import traceback
import os
import sys
import random
selfAddon = xbmcaddon.Addon()

HEADER_REFERER = 'http://www.teledunet.com/'
TELEDUNET_CHANNEL_PAGE = 'http://www.teledunet.com/mobile/?con'

HEADER_HOST = 'www.teledunet.com'
HEADER_USER_AGENT = 'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'
TELEDUNET_TIMEPLAYER_URL = 'http://www.teledunet.com/mobile/'
PPV_CHANNEL_URL='rtmp://5.135.134.110:1935/teledunet/'

cj = cookielib.CookieJar()
opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))
addonPath = xbmcaddon.Addon().getAddonInfo("path")
communityStreamPath = os.path.join(addonPath,'resources')

COOKIEFILE = communityStreamPath+'/teletdunetPlayerLoginCookie.lwp'


def _get(request,post=None):
    """Performs a GET request for the given url and returns the response"""
    return opener.open(request,post).read()

def _html(url, rheaders=None):
    """Downloads the resource at the given url and parses via BeautifulSoup"""
    headers = { "User-Agent": HEADER_USER_AGENT  }
    if rheaders:
        headers.update(rheaders);
    request = urllib2.Request (url , headers = headers)
    return BeautifulSoup(_get(request), convertEntities=BeautifulSoup.HTML_ENTITIES)


def __get_cookie_session():
    # Fetch the main Teledunet website to be given a Session ID
    _html('http://www.teledunet.com/')

    for cookie in cj:
        if cookie.name == 'PHPSESSID':
            return 'PHPSESSID=%s' % cookie.value

    raise Exception('Cannot find PHP session from Teledunet')

def performLogin():
    print 'performing login'
    userName=selfAddon.getSetting( "teledunetTvLogin" )
    password=selfAddon.getSetting( "teledunetTvPassword" )
    req = urllib2.Request('http://www.teledunet.com/boutique/connexion6.php')
    req.add_header('User-Agent','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154 Safari/537.36')
    post={'login_user':userName,'pass_user':password}
    post = urllib.urlencode(post)
    link = _get(req,post)

def stringToCode(str):
    r=0
    for i in range(0,len(str)):
        r+=ord(str[i])
    return r

def get_rtmp_params(channel_name, dz='', ip='', ide=''):
    print 'Walid get_rtmp_params 1, ide', ide
    play_path = channel_name
    loginname=selfAddon.getSetting( "teledunetTvLogin" )
    rtmp_url = "rtmp://www.teledunet.com:1935/live?idu=" + loginname + ide
    headers = { "User-Agent": HEADER_USER_AGENT  }
    reqURL = 'http://www.teledunet.com/mobile/rtmp_player/?channel=' + channel_name + '&streamer='+ rtmp_url
    reqChan = urllib2.Request (reqURL , headers = headers)
    _get(reqChan)
    return reqChan

def get_channels():
    global dz, ip, ide
    print 'Walid scraper get_channels'
    loginname=selfAddon.getSetting( "teledunetTvLogin" )
    if not loginname=="":
        if shouldforceLogin():
            if performLogin():
                print 'done login'
            else:
                print 'login failed??'
        else:
            print 'Login not forced.. perhaps reusing the session'
        cookie_jar=getCookieJar()
    else:
        cookie_jar=cookielib.LWPCookieJar()
    getUrl('http://www.teledunet.com/', cookie_jar)
    mainpage=getUrl('http://www.teledunet.com/', cookie_jar,referer='http://www.teledunet.com/boutique/connexion6.php')

    _html(HEADER_REFERER)

    headers = { "Referer": HEADER_REFERER  }
    html = _html(TELEDUNET_CHANNEL_PAGE,headers)
#    print html

    ip_patt="ip='(.*?)';"
    dz_patt="dz='(.*?)';"
    id_patt="id_user_rtmp='(.*?)';"
    chan_patt = re.compile('"channel_name_.*?"')
    
    dz=re.findall(dz_patt, str(html))[0]
    ip=re.findall(ip_patt, str(html))[0]
    ide=re.findall(id_patt, str(html))[0]

    print 'dz',	dz, 'ip', ip, 'ide', ide        
    
    channel_divs = lambda soup : soup.findAll('tr')
#    print channel_divs(html)
    channels = [ChannelItem(el=el) for el in channel_divs(html)]
#    print 'channels are', channels
    return (channels, (dz,ip, ide))
''''
def getChannelHTML(cid):
    try:
        cookie_jar=None
        print 'Getting HTML from Teledunet'
        loginName=selfAddon.getSetting( "teledunetTvLogin" )
        if not loginName=="":
            if shouldforceLogin():
                if performLogin():
                    print 'done login'
                else:
                    print 'login failed??'
            else:
                print 'Login not forced.. perhaps reusing the session'
            cookie_jar=getCookieJar()
        else:
            cookie_jar=cookielib.LWPCookieJar()
        getUrl('http://www.teledunet.com/', cookie_jar)
        mainpage=getUrl('http://www.teledunet.com/', cookie_jar,referer='http://www.teledunet.com/boutique/connexion6.php')
 
        import time
        #currentTime=int(time.time()*1000)
        
        rnd=str(int(time.time()*1000))
#        post={'rndval':rnd}
#        post = urllib.urlencode(post)
#        html=getUrl('http://www.teledunet.com/update_connect_date.php', cookie_jar,referer='http://www.teledunet.com/?channel='+cid,post=post)
        answer=None#re.findall('answer\',\'(.*?)\'', html)
        newod1=None
#        if answer and len(answer)>0:
#            for ans in answer:
#                if not newod1: 
#                    rnd=time.time()*1000
#                    post={'answer':ans,'rndval':rnd}
#                    spacerUrl="http://www.teledunet.com/spacer.php"
#                    post = urllib.urlencode(post)
#                    html=getUrl(spacerUrl,cookie_jar ,post,'http://www.teledunet.com/')
#                    if 'id1' in html:
#                        newod1=re.findall('id1=(.*)', html)[0]
#        if newod1==None:
#            post={'onData':'[type Function]','secure':'1'}
#            post = urllib.urlencode(post)#Referer: http://www.teledunet.com/player.swf?
#            html=getUrl('http://www.teledunet.com/security.php',cookie_jar ,post,'http://www.teledunet.com/player.swf?')        
#            if 'id1' in html:
#                newod1=re.findall('id1=(.*)', html)[0]
        token=''
        link=""

#        token=str(   int('11' +  str(int(999999 +random.random() * (99999999 - 999999)))) * 3353);
#		print 'Walid token 3'
#        print 'walid 34 getChannelHTML', token
        newURL='http://www.teledunet.com/mobile/'
#        link=getUrl(newURL,cookie_jar ,None,'http://www.teledunet.com/')
#        print 'walid getChannelHTML 4'
#        post={'rndval':str(rnd)}
#        print 'walid getChannelHTML 5'
#        link=getUrl('http://www.teledunet.com/pay/',cookie_jar ,None,'http://www.teledunet.com/')
#        print 'walid getChannelHTML 6'
#        post = urllib.urlencode(post)
#        print 'walid getChannelHTML 7'
#        link=getUrl(newURL,cookie_jar ,post,'http://www.teledunet.com/')
#        print 'walid getChannelHTML 8'
#        link=getUrl(newURL,cookie_jar ,None,'http://www.teledunet.com/')

#        if newod1:
#            link+='fromspacer('+newod1+")"
        
#        print 'walid getChannelHTML 9'
        return {'link':link,'token':token,'mainpage':mainpage}
    except:
        traceback.print_exc(file=sys.stdout)
        return ''

def PlayStream(sourceEtree, urlSoup, name, url):
    print "Walid PlayStream 1"
    try:
        channelId = urlSoup.url.text
        pDialog = xbmcgui.DialogProgress()
        pDialog.create('XBMC', 'Communicating with Teledunet')
        pDialog.update(10, 'fetching channel page')
        loginName=selfAddon.getSetting( "teledunetTvLogin" )

        howMaytimes=2    
        totalTried=0
        doDummy=False           
        

        while totalTried<howMaytimes:
            totalTried+=1
            if 1==1:
                newURL='http://www.teledunet.com/mobile/'
                print 'newURL',newURL
                token=''
                try:
                    link=None
                    result = getChannelHTML(channelId);#cache2Hr.cacheFunction(getChannelHTML)
                    print "Walid PlayStream 2"
                    
                    
                    if result:
                        link=result['link']
                        token=result['token']
                        print "token ", token, "link is too big",
                        mainpage=result['mainpage']
                        
                        print 'file_exists ',len(link), 'token ', token
                    else:
                        print 'cache or the url failed!!'
                        
                    print "Walid PlayStream 3"
                    rtmp =re.findall(('rtmp://(.*?)/%s\''%channelId), link)
                    if len(rtmp)==0:
                        print 'creating it manually'
                        rtmp='rtmp://127.0.0.1:1935/live/%s'%channelId
                    else:
                        print "Walid PlayStream 4"
                        rtmp=rtmp[0]               
                    print 'rtmp1',rtmp
                    rtmp='rtmp://%s/%s'%(rtmp,channelId)
                    print 'rtmp2',rtmp
                    if '127.0.0.1' in rtmp:
                        server_pat='Array\((.*?)\);'
                        servers_array=re.findall(server_pat, link)[0].replace('\'','')+','
                        print servers_array
                        server_pat="(rtmp:.*?),"
                        servers_array=re.findall(server_pat, servers_array)
                        spat='server_num=([0-9]*);'
                        spatt_for_default='(?!if\(pays).*\sserver_num=(.*?);'
                        patt_for_geo='pays=\'(.*?)\';'
                        spatt_for_geo='(if\(pays=="fr"\)\sserver_num=(.*?);'
                        try:
                            sidtemp=int(re.findall(spat, link)[-1])
                            print 'sidtemp',sidtemp
                            if (sidtemp)<len(servers_array): 
                                servers_array = [servers_array.pop(sidtemp)]+servers_array
                            print 'servers_array revised',servers_array
                        except: pass
                        
                        rtmp=servers_array[0]#totalTried-1] 
                except:
                    clearFileCache()            
                    traceback.print_exc(file=sys.stdout)
                    print 'trying backup'
                    try:
                        link=getUrl("http://pastebin.com/raw.php?i=z66yHXcG", getCookieJar())
                        rtmp =re.findall(('rtmp://(.*?)/%s\''%channelId), link)[0]
                        rtmp='rtmp://%s/%s'%(rtmp,channelId)
                    except:
                        traceback.print_exc(file=sys.stdout)
                        rtmp='rtmp://5.196.84.28:1935/live/%s'%(channelId)
                        print 'error in channel using hardcoded value'
            pDialog.update(80, 'trying to play')
            liveLink= sourceEtree.findtext('rtmpstring');
            freeCH=channelId#'2m'
            ip_patt="ip='(.*?)';"
            dz_patt="dz='(.*?)';"
            id_patt="id_user_rtmp='(.*?)';"
            today = datetime.datetime.now()
            v1 = 234*(366-(today - datetime.datetime(today.year, 1, 1)).days + 0);
            v2 = 222; #something wrong in calc, may be timezone?
            dz=re.findall(dz_patt, link)[0]        
            ip=re.findall(ip_patt, link)[0]
            ide=re.findall(id_patt, link)[0]
            ip2=ip.replace('.','')
#            print 'Walid ssssssssss id_user_rtmp', id_user_rtmp
            print 'ip2', ip2, 'channelId ', channelId, 'ide', ide
#            token=str(long(ip2)*len(channelId)*int(dz)+int(0 +random.random() *10))
            token=(long(ip2)*stringToCode(channelId)*long(dz)*stringToCode(selfAddon.getSetting( "teledunetTvLogin" )))
#           print "Walid tonken 2", token 
            print 'dz',	dz, 'token ', token        
            access_id=str(((365-int(dz))*long(ip2)*v1)+v2)
            access_id='?id1='+access_id
            access_iddummy='?id1=1'

       
            liveLinkdummy=liveLink%(rtmp,'',freeCH,selfAddon.getSetting( "teledunetTvLogin" ),'')
#            liveLink=liveLink%(rtmp,channelId,access_id,freeCH,selfAddon.getSetting( "teledunetTvLogin" ),token)
            liveLink=liveLink%(rtmp,channelId,freeCH,selfAddon.getSetting( "teledunetTvLogin" ).replace(' ','%20'),token)
            patt='swfUrl=(.*?) '
            swf=re.findall(patt, liveLink)[0]
            getUrl(swf)
            name+='-Teledunet'
            print 'liveLink',liveLink
            pDialog.close()
#            try:
#                howMaytimes=int(selfAddon.getSetting( "teledunetRetryCount" ))
#            except:pass

            pDialog = xbmcgui.DialogProgress()
            pDialog.create('XBMC', 'Playing channel')

            patt='add_friend=(.*?)\'.*?<img src="premium.png"'
            res=re.findall(patt, mainpage)
            randomuser=''
            if res and len(res)>0:
                randomuser=res[0]
      
#		howMaytimes=2
#		totalTried=0        
#		while totalTried<howMaytimes:
            if 1==1:##instead of while
                liveLinkPlay=liveLink
                if totalTried==1 and doDummy:
                    liveLinkPlay=liveLinkdummy
                pDialog.update((totalTried*100)/howMaytimes, 'Teledunet: Try #' + str(totalTried) +' of ' + str(howMaytimes))
                listitem = xbmcgui.ListItem( label = str(name), iconImage = "DefaultVideo.png", thumbnailImage = xbmc.getInfoImage( "ListItem.Thumb" ), path=liveLinkPlay )
                player = CustomPlayer.MyXBMCPlayer()
                #xbmc.Player().play( liveLink,listitem)
                start = time.time()  
                player.pdialogue=pDialog
                if pDialog.iscanceled():
                    break
                if 1==2 and totalTried==2:
                    if len(randomuser)==0:
                        break
                    else:
                        liveLinkPlay=re.sub('user=(.*?)&','user=%s&'%randomuser,liveLinkPlay)
                player.play( liveLinkPlay,listitem)  
                if pDialog.iscanceled():
                    break
                #pDialog.close()
                while player.is_active:
                    xbmc.sleep(200)
                #return player.urlplayed
                done = time.time()
                elapsed = done - start
                #save file
                if player.urlplayed and elapsed>=3:
                    return True
        pDialog.close()
        return False
    except:
        traceback.print_exc(file=sys.stdout)    
    return False
'''
def performLogin():
    try:
        cookieJar = cookielib.LWPCookieJar()
        userName = selfAddon.getSetting( "teledunetTvLogin" )
        password = selfAddon.getSetting( "teledunetTvPassword" )
        print 'Values are ',userName,password
        post = {'login_user':userName,'pass_user':password}
        post = urllib.urlencode(post)
        html_text = getUrl("http://www.teledunet.com/boutique/connexion6.php", cookieJar, post)
        cookieJar.save (COOKIEFILE, ignore_discard=True)
        #print 'cookie jar saved',cookieJar
        #html_text=getUrl("http://www.teledunet.com/",cookieJar,referer='http://www.teledunet.com/boutique/connexion6.php')
        #cookieJar.save (COOKIEFILE,ignore_discard=True)
        return shouldforceLogin(cookieJar) == False
    except:
        traceback.print_exc(file=sys.stdout)
        return False

def shouldforceLogin(cookieJar=None):
    try:
        url="http://www.teledunet.com/boutique/connexion6.php"
        if not cookieJar:
            cookieJar=getCookieJar()
        html_txt=getUrl(url,cookieJar)
        
            
        if '<input name="login_user"' in html_txt:
            return True
        else:
            return False
    except:
        traceback.print_exc(file=sys.stdout)
    return True

def getCookieJar():
    cookieJar = None

    try:
        cookieJar = cookielib.LWPCookieJar()
        cookieJar.load(COOKIEFILE, ignore_discard=True)
    except:
        cookieJar = None

    if not cookieJar:
        cookieJar = cookielib.LWPCookieJar()

    return cookieJar
'''
def getUrl(url, cookieJar=None,post=None,referer=None):
#   print 'Walid getUrl 1'
   cookie_handler = urllib2.HTTPCookieProcessor(cookieJar)
#   print 'Walid getUrl 2'
   opener = urllib2.build_opener(cookie_handler, urllib2.HTTPBasicAuthHandler(), urllib2.HTTPHandler())
#   print 'Walid getUrl 3'
#   #opener = urllib2.install_opener(opener)
   req = urllib2.Request(url)
#   print 'Walid getUrl 4'
   req.add_header('User-Agent','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154 Safari/537.36')
#   print 'Walid getUrl 5'
   if referer:
#      print 'Walid getUrl 6'
      req.add_header('Referer',referer)
#   print 'Walid getUrl 7'
   response = opener.open(req,post,timeout=30)
#   print 'Walid getUrl 8'
   link=response.read()
#   print 'Walid getUrl 9'
   response.close()
#   print 'Walid getUrl 10'
   return link;

def __get_hardcoded_streams():
    return [ChannelItem(json=json) for json in HARDCODED_STREAMS]
'''
def debug():
    print len(get_channels())
    #print __get_channel_time_player('2m')
    #print get_rtmp_params('2m')
    pass


if __name__ == '__main__':
    debug()
